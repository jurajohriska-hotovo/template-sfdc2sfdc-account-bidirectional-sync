<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:os="http://www.mulesoft.org/schema/mule/os"
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch" 
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd 
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd">

<flow name="fromSalesforceAtoSalesforceB" doc:id="8759532e-79b7-4789-990c-dc8e162bfd67" >
		<batch:job jobName="fromSalesforceAtoSalesforceBBatch" doc:id="204892ae-0d97-4326-beae-310c8d52b7a6">
			<batch:process-records>
				<batch:step name="forEachAccountInSalesforceAGetAccountFromSalesforceBStep" doc:id="89713774-362a-4e92-9bdc-41e31802bf38">
					<salesforce:query-single config-ref="Salesforce_Sfdc_B_config" doc:name="Query Account in Salesforce instance B" doc:id="e828fbe5-8917-4833-a479-8df69b560884" target="IdDateInB">
						<salesforce:salesforce-query>SELECT Id, LastModifiedDate FROM Account WHERE Name = ':name'</salesforce:salesforce-query>
						<salesforce:parameters><![CDATA[#[output applicaton/java
---
{
	"name" : payload.Name
}]]]></salesforce:parameters>
					</salesforce:query-single>
					<ee:transform doc:name="set Id and LastModifiedDate from matching account" doc:id="c119f87d-9095-4962-b961-efe507b06a0c">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
payload ++ {
	Id: if(vars.IdDateInB !=null) vars.IdDateInB.Id else null, 
	LastModifiedDateB: if(vars.IdDateInB !=null) vars.IdDateInB.LastModifiedDate else null
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
				</batch:step>
				<batch:step name="forEachAccountToBeUpsertedInSalesforceB" doc:id="78a74ab4-9b91-416d-985a-acda2ac377eb" acceptExpression="#[payload.Id == null  or (payload.LastModifiedDateB &lt; payload.LastModifiedDate)]">
					<batch:aggregator doc:name="Batch Aggregator" doc:id="1ad86a98-643e-494a-a90a-32daab0b03cc" size="${page.size}">
						<ee:transform doc:name="map Salesforce Accounts" doc:id="d484063f-6d81-42ce-98ef-7cec51b04672">
							<ee:message>
								<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
payload map {
	Id: $.Id,
	Name: $.Name,
	NumberOfEmployees : $.NumberOfEmployees default 0,
	Industry: $.Industry,
	ShippingStreet: $.ShippingStreet,
	Site: $.Site,
	Type: $.Type,
	Website: $.Website,
	ShippingCity: $.ShippingCity,
	ShippingCountry: $.ShippingCountry,
	ShippingPostalCode: $.ShippingPostalCode,
	ShippingState: $.ShippingState,
	BillingCity: $.BillingCity,
	BillingCountry: $.BillingCountry,
	BillingPostalCode: $.BillingPostalCode,
	BillingState: $.BillingState,
	BillingStreet: $.BillingStreet
}]]></ee:set-payload>
							</ee:message>
						</ee:transform>
						<salesforce:upsert-bulk config-ref="Salesforce_Sfdc_B_config" type="Account" externalIdFieldName="Id" doc:name="Upsert bulk - Accounts in Salesforce instance B" doc:id="26dee78b-3cbd-41d7-a260-538058420b0e" />
					</batch:aggregator>
				</batch:step>
			</batch:process-records>
			<batch:on-complete >
				<os:store key="syncState" doc:name="Set sync state to fromB" doc:id="f08de372-2fb9-4aef-80ca-f6da2241fc75" objectStore="SchedulerStatus">
					<os:value><![CDATA[fromB]]></os:value>
				</os:store>
			</batch:on-complete>
		
</batch:job>
	</flow>
	<flow name="fromSalesforceBtoSalesforceA" doc:id="8759532e-79b7-4789-990c-dc8e162bfd67" >
		<batch:job jobName="fromSalesforceBtoSalesforceABatch" doc:id="204892ae-0d97-4326-beae-310c8d52b7a6">
			<batch:process-records>
				<batch:step name="forEachAccountInSalesforceBGetAccountFromSalesforceAStep" doc:id="89713774-362a-4e92-9bdc-41e31802bf38">
					<salesforce:query-single config-ref="Salesforce_Sfdc_A_config" doc:name="Query Account in Salesforce instance A" doc:id="e828fbe5-8917-4833-a479-8df69b560884" target="IdDateInA">
						<salesforce:salesforce-query>SELECT Id, LastModifiedDate FROM Account WHERE Name = ':name'</salesforce:salesforce-query>
						<salesforce:parameters><![CDATA[#[output applicaton/java
---
{
	"name" : payload.Name
}]]]></salesforce:parameters>
					</salesforce:query-single>
					<ee:transform doc:name="set Id and LastModifiedDate from matching account" doc:id="c119f87d-9095-4962-b961-efe507b06a0c">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
payload ++ {
	Id: if(vars.IdDateInA !=null) vars.IdDateInA.Id else null, 
	LastModifiedDateA: if(vars.IdDateInA !=null) vars.IdDateInA.LastModifiedDate else null
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
				</batch:step>
				<batch:step name="forEachAccountToBeUpsertedInSalesforceA" doc:id="78a74ab4-9b91-416d-985a-acda2ac377eb" acceptExpression="#[payload.Id == null  or (payload.LastModifiedDateA &lt; payload.LastModifiedDate)]">
					<batch:aggregator doc:name="Batch Aggregator" doc:id="1ad86a98-643e-494a-a90a-32daab0b03cc" size="${page.size}">
						<ee:transform doc:name="map Salesforce Accounts" doc:id="d484063f-6d81-42ce-98ef-7cec51b04672">
							<ee:message>
								<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
payload map {
	Id: $.Id,
	Name: $.Name,
	NumberOfEmployees : $.NumberOfEmployees default 0,
	Industry: $.Industry,
	ShippingStreet: $.ShippingStreet,
	Site: $.Site,
	Type: $.Type,
	Website: $.Website,
	ShippingCity: $.ShippingCity,
	ShippingCountry: $.ShippingCountry,
	ShippingPostalCode: $.ShippingPostalCode,
	ShippingState: $.ShippingState,
	BillingCity: $.BillingCity,
	BillingCountry: $.BillingCountry,
	BillingPostalCode: $.BillingPostalCode,
	BillingState: $.BillingState,
	BillingStreet: $.BillingStreet
}]]></ee:set-payload>
							</ee:message>
						</ee:transform>
						<salesforce:upsert-bulk config-ref="Salesforce_Sfdc_A_config" externalIdFieldName="Id" doc:name="Upsert bulk - Accounts in Salesforce instance A" doc:id="26dee78b-3cbd-41d7-a260-538058420b0e" type="Account"/>
					</batch:aggregator>
				</batch:step>
			</batch:process-records>
			<batch:on-complete >
				<os:store key="syncState" doc:name="Set sync state to fromA" doc:id="f08de372-2fb9-4aef-80ca-f6da2241fc75" objectStore="SchedulerStatus">
					<os:value><![CDATA[fromA]]></os:value>
				</os:store>
			</batch:on-complete>
		
</batch:job>
	</flow>
</mule>
